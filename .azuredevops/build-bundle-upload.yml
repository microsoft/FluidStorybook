# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# build-storybook pipeline
# This pipeline builds storybook, makes a tarball, uploads a tarball, and then tells the repo
# about the update

name: $(Build.BuildId)

variables:
  - group: storage-vars
  - name: repoToTrigger
    value: microsoft/FluidFramework

# no branch and PR triggers
trigger:
  branches:
    include:
    - main
    - act*
pr: none

pool: Main

stages:
- stage: build
  displayName: Build
  jobs:
  - job: build
    displayName: Build
    steps:
    - task: UseNode@1
      displayName: Use Node 12.x
      inputs:
        version: 12.x
    - task: Npm@1
      displayName: Install
      inputs:
        command: 'custom'
        customCommand: 'ci'

    - task: Npm@1
      displayName: Build
      inputs:
        command: 'custom'
        customCommand: 'run build:hugo'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/storybook-static'
        includeRootFolder: false
        archiveType: 'tar' # Options: zip, 7z, tar, wim
        tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
        archiveFile: '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz'
        replaceExistingArchive: true
        verbose: true # Optional
        #quiet: # Optional

    - task: AzureCLI@2
      displayName: 'Upload Storybook'
      inputs:
        azureSubscription: 'fluid-docs'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage blob upload -f '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz' -c 'storybook' -n $(Build.SourceVersion).tar.gz --account-name $(STORAGE_ACCOUNT) --account-key $(STORAGE_KEY) --verbose

    - task: AzureCLI@2
      displayName: 'Upload Storybook as latest.tar.gz'
      inputs:
        azureSubscription: 'fluid-docs'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage blob upload -f '$(Pipeline.Workspace)/$(Build.SourceVersion).tar.gz' -c 'storybook' -n latest.tar.gz --account-name $(STORAGE_ACCOUNT) --account-key $(STORAGE_KEY) --verbose

- stage: github_actions
  displayName: GitHub Action
  pool: server
  dependsOn: build
  jobs:
    - job: trigger_github_action
      displayName: 'Trigger repository_dispatch'
      steps:
      - task: InvokeRESTAPI@1
        inputs:
          connectionType: 'connectedServiceName' # Options: connectedServiceName, connectedServiceNameARM
          serviceConnection: 'GitHub Actions' # Required when connectionType == ConnectedServiceName
          #azureServiceConnection: # Required when connectionType == ConnectedServiceNameARM
          method: 'POST' # Options: OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, PATCH
          headers: '{"Accept": "application/vnd.github.v3+json"}'
          body: '{"event_type": "Storybook build for SHA $(Build.SourceVersion)"}' # Required when method != GET && Method != HEAD
          urlSuffix: 'repos/$(repoToTrigger)/dispatches' # Optional
          waitForCompletion: 'false' # Options: true, false
          #successCriteria: # Optional
