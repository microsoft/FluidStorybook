# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# FluidHelloWorld build for CI

trigger:
- main

pr:
- main

variables:
  skipComponentGovernanceDetection: true

resources:
  repositories:
    - repository: m365Pipelines
      type: git
      name: 1ESPipelineTemplates/M365GPT
      ref: refs/tags/release
extends:
  template: v1/M365.Official.PipelineTemplate.yml@m365Pipelines
  parameters:
    pool:
      name: NewLarge-linux-1ES
      os: linux
    sdl:
      arrow:
        # This is the service connection for the Arrow Service Connection in FluidFramework Azure DevOps organization
        # Currently we want to use different names for internal and public builds for Arrow Service Connection
        ${{ if eq(variables['System.TeamProject'], 'internal') }}:
          serviceConnection: Arrow_FluidFramework_internal
        ${{ else }}:
          serviceConnection: Arrow_FluidFramework_public
      sourceAnalysisPool:
        name: Azure-Pipelines-1ESPT-ExDShared
        image: windows-2022
        os: windows
    # Skip tagging if Github PR coming from a fork
    settings:
      skipBuildTagsForGitHubPullRequests: true
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - stage: stage
        jobs:
          - job: job
            steps:
              - task: ComponentGovernanceComponentDetection@0
                inputs:
                  scanType: 'Register'
                  verbosity: 'Verbose'
                  alertWarningLevel: 'High'
              - task: UseNode@1
                displayName: Use Node 12.x
                inputs:
                  version: 12.x
              - task: Npm@1
                displayName: Install
                inputs:
                  command: 'custom'
                  customCommand: 'install'

              # Remove Policy Check until folder issue is resolved
              # - task: Npm@1
              #   displayName: Policy Check
              #   inputs:
              #     command: 'custom'
              #     customCommand: 'run policy-check'

              - task: Npm@1
                displayName: Build
                inputs:
                  command: 'custom'
                  customCommand: 'run build'
              - task: Npm@1
                displayName: Test
                inputs:
                  command: 'custom'
                  customCommand: 'run test -- --reporters=default --reporters=jest-junit'
              - task: PublishTestResults@2
                displayName: Publish Test Results
                inputs:
                  testResultsFormat: 'JUnit'
                  testResultsFiles: '**/*junit-report.xml'
                  searchFolder: nyc
                  mergeTestResults: true
                condition: succeededOrFailed()